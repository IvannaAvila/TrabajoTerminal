{"ast":null,"code":"var _jsxFileName = \"/home/ivanna/Documents/tt2/inicio/src/Seleccionimg.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Seleccionarimg() {\n  _s();\n  const inputRef = useRef(null);\n  const [selectedImageName, setSelectedImageName] = useState('');\n  const [mostrarBotonBuscar, setMostrarBotonBuscar] = useState(false);\n  const handleFileInputChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setSelectedImageName(selectedFile.name);\n      setMostrarBotonBuscar(true);\n    }\n  };\n  const handleButtonClick = () => {\n    inputRef.current.click();\n  };\n  const handleBuscarClick = () => {\n    // Lógica para la búsqueda\n    // Puedes implementar lo que sea necesario al hacer clic en \"Buscar\"\n    alert('Realizando búsqueda...'); // Muestra una alerta al hacer clic\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mostrarBotonBuscar ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Nombre\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedImageName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBuscarClick,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"busqueda-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        className: \"busqueda\",\n        children: \"Seleccionar imagen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Seleccionarimg, \"jTVgP2P+VL7CEDLKyBXUPR6JVac=\");\n_c = Seleccionarimg;\nexport default Seleccionarimg;\nvar _c;\n$RefreshReg$(_c, \"Seleccionarimg\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Seleccionarimg","_s","inputRef","selectedImageName","setSelectedImageName","mostrarBotonBuscar","setMostrarBotonBuscar","handleFileInputChange","event","selectedFile","target","files","name","handleButtonClick","current","click","handleBuscarClick","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ivanna/Documents/tt2/inicio/src/Seleccionimg.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nfunction Seleccionarimg() {\n  const inputRef = useRef(null);\n  const [selectedImageName, setSelectedImageName] = useState('');\n  const [mostrarBotonBuscar, setMostrarBotonBuscar] = useState(false);\n\n  const handleFileInputChange = (event) => {\n    const selectedFile = event.target.files[0];\n\n    if (selectedFile) {\n      setSelectedImageName(selectedFile.name);\n      setMostrarBotonBuscar(true);\n    }\n  };\n\n  const handleButtonClick = () => {\n    inputRef.current.click();\n  };\n\n  const handleBuscarClick = () => {\n    // Lógica para la búsqueda\n    // Puedes implementar lo que sea necesario al hacer clic en \"Buscar\"\n    alert('Realizando búsqueda...'); // Muestra una alerta al hacer clic\n  };\n\n  return (\n    <div>\n      {mostrarBotonBuscar ? (\n        <div className='Nombre'>\n          <p>{selectedImageName}</p>\n          <button onClick={handleBuscarClick}>Buscar</button>\n        </div>\n      ) : (\n        <div className='busqueda-container'>\n          <button onClick={handleButtonClick} className='busqueda'>\n            Seleccionar imagen:\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Seleccionarimg;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMU,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAE1C,IAAIF,YAAY,EAAE;MAChBL,oBAAoB,CAACK,YAAY,CAACG,IAAI,CAAC;MACvCN,qBAAqB,CAAC,IAAI,CAAC;IAC7B;EACF,CAAC;EAED,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9BX,QAAQ,CAACY,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA;IACAC,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACnC,CAAC;;EAED,oBACElB,OAAA;IAAAmB,QAAA,EACGb,kBAAkB,gBACjBN,OAAA;MAAKoB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBnB,OAAA;QAAAmB,QAAA,EAAIf;MAAiB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BxB,OAAA;QAAQyB,OAAO,EAAER,iBAAkB;QAAAE,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,gBAENxB,OAAA;MAAKoB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eACjCnB,OAAA;QAAQyB,OAAO,EAAEX,iBAAkB;QAACM,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAEzD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CAxCQD,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}