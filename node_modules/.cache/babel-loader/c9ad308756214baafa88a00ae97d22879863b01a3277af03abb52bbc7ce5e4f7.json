{"ast":null,"code":"var _jsxFileName = \"/home/ivanna/Documents/tt2/inicio/src/crearcuenta/Usuario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Usuario = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        // Cuando la lectura del archivo esté completa, actualiza el estado con la URL de la imagen\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file); // Lee el archivo como una URL de datos\n    }\n  };\n\n  const handleButtonClick = () => {\n    // Activa el clic en el elemento de entrada de archivos al hacer clic en el botón\n    document.getElementById('fileInput').click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleImageChange,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: selectedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Imagen seleccionada\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"user.png\",\n        alt: \"Imagen predeterminada\",\n        style: {\n          maxWidth: '10%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Usuario, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = Usuario;\nexport default Usuario;\nvar _c;\n$RefreshReg$(_c, \"Usuario\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Usuario","_s","selectedImage","setSelectedImage","handleImageChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleButtonClick","document","getElementById","click","children","type","id","style","display","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","maxWidth","_c","$RefreshReg$"],"sources":["/home/ivanna/Documents/tt2/inicio/src/crearcuenta/Usuario.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Usuario = () => {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        // Cuando la lectura del archivo esté completa, actualiza el estado con la URL de la imagen\n        setSelectedImage(reader.result);\n      };\n\n      reader.readAsDataURL(file); // Lee el archivo como una URL de datos\n    }\n  };\n\n  const handleButtonClick = () => {\n    // Activa el clic en el elemento de entrada de archivos al hacer clic en el botón\n    document.getElementById('fileInput').click();\n  };\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        id=\"fileInput\"\n        style={{ display: 'none' }}\n        onChange={handleImageChange}\n        accept=\"image/*\"\n      />\n      <button onClick={handleButtonClick}>\n        {selectedImage ? (\n          <img src={selectedImage} alt=\"Imagen seleccionada\" style={{ maxWidth: '100%' }} />\n        ) : (\n          <img src=\"user.png\" alt=\"Imagen predeterminada\" style={{ maxWidth: '10%' }} />\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default Usuario;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvB;QACAR,gBAAgB,CAACM,MAAM,CAACG,MAAM,CAAC;MACjC,CAAC;MAEDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC;;EAED,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC,CAAC;EAC9C,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACdC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,QAAQ,EAAEnB,iBAAkB;MAC5BoB,MAAM,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAEf,iBAAkB;MAAAI,QAAA,EAChChB,aAAa,gBACZH,OAAA;QAAK+B,GAAG,EAAE5B,aAAc;QAAC6B,GAAG,EAAC,qBAAqB;QAACV,KAAK,EAAE;UAAEW,QAAQ,EAAE;QAAO;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAElF7B,OAAA;QAAK+B,GAAG,EAAC,UAAU;QAACC,GAAG,EAAC,uBAAuB;QAACV,KAAK,EAAE;UAAEW,QAAQ,EAAE;QAAM;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC9E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzCID,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}