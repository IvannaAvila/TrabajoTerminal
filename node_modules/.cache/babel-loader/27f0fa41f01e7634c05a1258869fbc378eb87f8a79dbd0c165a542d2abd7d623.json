{"ast":null,"code":"var _jsxFileName = \"/home/ivanna/Documents/tt2/inicio/src/context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context.js\n/*import { createContext, useContext, useState } from 'react';\n\nconst ImagenContext = createContext();\n\nexport const ImagenProvider = ({ children }) => {\n  const [imagenCargada, setImagenCargada] = useState({ url: null, nombre: null });\n\n  return (\n    <ImagenContext.Provider value={{ imagenCargada, setImagenCargada }}>\n      {children}\n    </ImagenContext.Provider>\n  );\n};\n\nexport const useImagenContext = () => {\n  return useContext(ImagenContext);\n};\n*/\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImagenContext = /*#__PURE__*/createContext();\nexport const useImagenContext = () => {\n  _s();\n  return useContext(ImagenContext);\n};\n_s(useImagenContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ImagenProvider = ({\n  children\n}) => {\n  _s2();\n  const [imagen, setImagen] = useState({\n    imagenSeleccionada: null,\n    imagenCapturada: null,\n    nombreImagenSeleccionada: null,\n    nombreImagenCapturada: null\n  });\n  const setImagenSeleccionada = (imagenSeleccionada, nombreImagen) => {\n    setImagen(prevImagen => ({\n      ...prevImagen,\n      imagenSeleccionada,\n      nombreImagenSeleccionada: nombreImagen\n    }));\n  };\n  const setImagenCapturada = (imagenCapturada, nombreImagen) => {\n    setImagen(prevImagen => ({\n      ...prevImagen,\n      imagenCapturada,\n      nombreImagenCapturada: nombreImagen\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(ImagenContext.Provider, {\n    value: {\n      imagen,\n      setImagenSeleccionada,\n      setImagenCapturada\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(ImagenProvider, \"LLY3h5Q2LP2pikulL9JskCQk1qE=\");\n_c = ImagenProvider;\nvar _c;\n$RefreshReg$(_c, \"ImagenProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ImagenContext","useImagenContext","_s","ImagenProvider","children","_s2","imagen","setImagen","imagenSeleccionada","imagenCapturada","nombreImagenSeleccionada","nombreImagenCapturada","setImagenSeleccionada","nombreImagen","prevImagen","setImagenCapturada","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ivanna/Documents/tt2/inicio/src/context.jsx"],"sourcesContent":["// context.js\n/*import { createContext, useContext, useState } from 'react';\n\nconst ImagenContext = createContext();\n\nexport const ImagenProvider = ({ children }) => {\n  const [imagenCargada, setImagenCargada] = useState({ url: null, nombre: null });\n\n  return (\n    <ImagenContext.Provider value={{ imagenCargada, setImagenCargada }}>\n      {children}\n    </ImagenContext.Provider>\n  );\n};\n\nexport const useImagenContext = () => {\n  return useContext(ImagenContext);\n};\n*/\nimport React, { createContext, useContext, useState } from 'react';\n\nconst ImagenContext = createContext();\n\nexport const useImagenContext = () => useContext(ImagenContext);\n\nexport const ImagenProvider = ({ children }) => {\n  const [imagen, setImagen] = useState({\n    imagenSeleccionada: null,\n    imagenCapturada: null,\n    nombreImagenSeleccionada: null,\n    nombreImagenCapturada: null,\n  });\n\n  const setImagenSeleccionada = (imagenSeleccionada, nombreImagen) => {\n    setImagen((prevImagen) => ({\n      ...prevImagen,\n      imagenSeleccionada,\n      nombreImagenSeleccionada: nombreImagen,\n    }));\n  };\n\n  const setImagenCapturada = (imagenCapturada, nombreImagen) => {\n    setImagen((prevImagen) => ({\n      ...prevImagen,\n      imagenCapturada,\n      nombreImagenCapturada: nombreImagen,\n    }));\n  };\n\n  return (\n    <ImagenContext.Provider value={{ imagen, setImagenSeleccionada, setImagenCapturada }}>\n      {children}\n    </ImagenContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMM,gBAAgB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,aAAa,CAAC;AAAA;AAACE,EAAA,CAAnDD,gBAAgB;AAE7B,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACnCW,kBAAkB,EAAE,IAAI;IACxBC,eAAe,EAAE,IAAI;IACrBC,wBAAwB,EAAE,IAAI;IAC9BC,qBAAqB,EAAE;EACzB,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAGA,CAACJ,kBAAkB,EAAEK,YAAY,KAAK;IAClEN,SAAS,CAAEO,UAAU,KAAM;MACzB,GAAGA,UAAU;MACbN,kBAAkB;MAClBE,wBAAwB,EAAEG;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAACN,eAAe,EAAEI,YAAY,KAAK;IAC5DN,SAAS,CAAEO,UAAU,KAAM;MACzB,GAAGA,UAAU;MACbL,eAAe;MACfE,qBAAqB,EAAEE;IACzB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEd,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEX,MAAM;MAAEM,qBAAqB;MAAEG;IAAmB,CAAE;IAAAX,QAAA,EAClFA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAChB,GAAA,CA7BWF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}