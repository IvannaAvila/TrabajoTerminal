{"ast":null,"code":"var _jsxFileName = \"/home/ivanna/Documents/tt2/inicio/src/capturarimg.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContextCaptura } from './Contextcaptura';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [imagenCapturada, setImagenCapturada] = useContextCaptura;\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [nombreImagen, setNombreImagen] = useState(null);\n  \n\n  const alternarCamara = async () => {\n    try {\n      if (!camaraIniciada) {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n      } else {\n        detenerCamara();\n      }\n      setCamaraIniciada(!camaraIniciada);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n  };\n\n  const capturaImg = () => {\n    const context = canvasRef.current.getContext('2d');\n    const video = videoRef.current;\n\n    canvasRef.current.width = video.videoWidth;\n    canvasRef.current.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/png');\n    setImagenCapturada(urlImagen);\n\n    // Obtener el nombre de la imagen\n    const nombre = `imagen_capturada_${new Date().getTime()}.png`;\n    setNombreImagen(nombre);\n\n    // Detener la cámara después de capturar la imagen\n    detenerCamara();\n    setCamaraIniciada(false);\n  };\n\n  const descargarImagen = () => {\n    const enlaceDescarga = document.createElement('a');\n    enlaceDescarga.href = imagenCapturada;\n    enlaceDescarga.download = nombreImagen || 'imagen_capturada.png';\n    enlaceDescarga.click();\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        <button onClick={alternarCamara} className='botoncam'>\n          <img src=\"busca.png\" alt=\"Botón con imagen\" />\n          {camaraIniciada ? 'Detener cámara' : 'Iniciar cámara'}\n        </button>\n      </div>\n      <div className='botoncam'>\n        {camaraIniciada && (\n          <button onClick={capturaImg} className='botoncam'>Tomar foto</button>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='nombreimagencaptura'>\n          <img src={imagenCapturada} alt=\"Imagen capturada\"  />\n          <p>Imagen: {nombreImagen}</p>\n          <button onClick={descargarImagen}>Descargar Imagen</button>\n          <Link to={{ pathname: \"/resultadocaptura\", state: { imagenCapturada } }} className='botonbuscar'>Buscar</Link>\n\n        </div>\n      )}\n\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n\n}\nexport default CapturaImg;\n*/\nimport React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useImagenContext } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CapturaImg() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [imagenCapturada, setImagenCapturada] = useState(null);\n  const {\n    setImagenCargada\n  } = useImagenContext();\n\n  // ... Resto del código ...\n\n  const handleBuscar = () => {\n    // Lógica para buscar la imagen\n    console.log('Buscar imagen:', imagenCapturada);\n    // Puedes redirigir a la página de resultados o realizar la lógica de búsqueda aquí\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tomarfoto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botoncam\",\n      children: camaraIniciada ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTomarFoto,\n          className: \"botoncam\",\n          children: \"Tomar foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDetenerCamara,\n          className: \"botoncam\",\n          children: \"Detener c\\xE1mara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: iniciarCamara,\n          className: \"botoncam\",\n          children: \"Iniciar c\\xE1mara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), imagenCapturada && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBuscar,\n          className: \"botoncam\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), imagenCapturada && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imagencapturada\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagenCapturada,\n        alt: \"Imagen capturada\",\n        className: \"result\",\n        style: {\n          width: '200px',\n          height: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: 'none'\n      },\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(CapturaImg, \"Gex4ssdwruzORtJEve9XG2QpFfM=\", false, function () {\n  return [useImagenContext];\n});\n_c = CapturaImg;\nexport default CapturaImg;\nvar _c;\n$RefreshReg$(_c, \"CapturaImg\");","map":{"version":3,"names":["React","useRef","useState","Link","useImagenContext","jsxDEV","_jsxDEV","Fragment","_Fragment","CapturaImg","_s","videoRef","canvasRef","camaraIniciada","setCamaraIniciada","imagenCapturada","setImagenCapturada","setImagenCargada","handleBuscar","console","log","className","children","onClick","handleTomarFoto","fileName","_jsxFileName","lineNumber","columnNumber","handleDetenerCamara","iniciarCamara","src","alt","style","width","height","ref","display","autoPlay","_c","$RefreshReg$"],"sources":["/home/ivanna/Documents/tt2/inicio/src/capturarimg.jsx"],"sourcesContent":["/*import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContextCaptura } from './Contextcaptura';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [imagenCapturada, setImagenCapturada] = useContextCaptura;\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [nombreImagen, setNombreImagen] = useState(null);\n  \n\n  const alternarCamara = async () => {\n    try {\n      if (!camaraIniciada) {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n      } else {\n        detenerCamara();\n      }\n      setCamaraIniciada(!camaraIniciada);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n  };\n\n  const capturaImg = () => {\n    const context = canvasRef.current.getContext('2d');\n    const video = videoRef.current;\n\n    canvasRef.current.width = video.videoWidth;\n    canvasRef.current.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/png');\n    setImagenCapturada(urlImagen);\n\n    // Obtener el nombre de la imagen\n    const nombre = `imagen_capturada_${new Date().getTime()}.png`;\n    setNombreImagen(nombre);\n\n    // Detener la cámara después de capturar la imagen\n    detenerCamara();\n    setCamaraIniciada(false);\n  };\n\n  const descargarImagen = () => {\n    const enlaceDescarga = document.createElement('a');\n    enlaceDescarga.href = imagenCapturada;\n    enlaceDescarga.download = nombreImagen || 'imagen_capturada.png';\n    enlaceDescarga.click();\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        <button onClick={alternarCamara} className='botoncam'>\n          <img src=\"busca.png\" alt=\"Botón con imagen\" />\n          {camaraIniciada ? 'Detener cámara' : 'Iniciar cámara'}\n        </button>\n      </div>\n      <div className='botoncam'>\n        {camaraIniciada && (\n          <button onClick={capturaImg} className='botoncam'>Tomar foto</button>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='nombreimagencaptura'>\n          <img src={imagenCapturada} alt=\"Imagen capturada\"  />\n          <p>Imagen: {nombreImagen}</p>\n          <button onClick={descargarImagen}>Descargar Imagen</button>\n          <Link to={{ pathname: \"/resultadocaptura\", state: { imagenCapturada } }} className='botonbuscar'>Buscar</Link>\n\n        </div>\n      )}\n\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n\n}\nexport default CapturaImg;\n*/\nimport React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useImagenContext } from './context';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [imagenCapturada, setImagenCapturada] = useState(null);\n  const { setImagenCargada } = useImagenContext();\n\n  // ... Resto del código ...\n\n  const handleBuscar = () => {\n    // Lógica para buscar la imagen\n    console.log('Buscar imagen:', imagenCapturada);\n    // Puedes redirigir a la página de resultados o realizar la lógica de búsqueda aquí\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        {camaraIniciada ? (\n          <>\n            <button onClick={handleTomarFoto} className='botoncam'>\n              Tomar foto\n            </button>\n            <button onClick={handleDetenerCamara} className='botoncam'>\n              Detener cámara\n            </button>\n          </>\n        ) : (\n          <>\n            <button onClick={iniciarCamara} className='botoncam'>\n              Iniciar cámara\n            </button>\n            {imagenCapturada && (\n              <button onClick={handleBuscar} className='botoncam'>\n                Buscar\n              </button>\n            )}\n          </>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='imagencapturada'>\n          <img\n            src={imagenCapturada}\n            alt='Imagen capturada'\n            className='result'\n            style={{ width: '200px', height: '300px' }}\n          />\n        </div>\n      )}\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n    </div>\n  );\n}\n\nexport default CapturaImg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}