{"ast":null,"code":"var _jsxFileName = \"/home/ivanna/Documents/tt2/inicio/src/Seleccionimg.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Seleccionarimg() {\n  _s();\n  const inputRef = useRef(null);\n  const [selectedImageName, setSelectedImageName] = useState('');\n  const [mostrarBotonBuscar, setMostrarBotonBuscar] = useState(false);\n  useEffect(() => {\n    // Tu lógica que usa inputRef.current\n    if (inputRef.current) {\n      inputRef.current.addEventListener('change', handleFileInputChange);\n    }\n\n    // Limpia el event listener al desmontar el componente\n    return () => {\n      if (inputRef.current) {\n        inputRef.current.removeEventListener('change', handleFileInputChange);\n      }\n    };\n  }, []); // Empty dependency array ensures the effect runs once after the component mounts\n\n  const handleFileInputChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setSelectedImageName(selectedFile.name);\n      setMostrarBotonBuscar(true);\n    }\n  };\n  const handleButtonClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  };\n  const handleBuscarClick = () => {\n    alert('Realizando búsqueda...');\n    console.log('Buscar haciendo clic en el botón');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      style: {\n        display: 'none'\n      },\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"busqueda-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        className: \"busqueda\",\n        children: \"Seleccionar imagen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), selectedImageName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Nombre\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedImageName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), mostrarBotonBuscar && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBuscarClick,\n          className: \"botonbuscar\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Seleccionarimg, \"NI1uvN9yAGVg05OI3hBnNfaKsEg=\");\n_c = Seleccionarimg;\nexport default Seleccionarimg;\nvar _c;\n$RefreshReg$(_c, \"Seleccionarimg\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","Seleccionarimg","_s","inputRef","selectedImageName","setSelectedImageName","mostrarBotonBuscar","setMostrarBotonBuscar","current","addEventListener","handleFileInputChange","removeEventListener","event","selectedFile","target","files","name","handleButtonClick","click","handleBuscarClick","alert","console","log","children","type","accept","style","display","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/home/ivanna/Documents/tt2/inicio/src/Seleccionimg.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nfunction Seleccionarimg() {\n  const inputRef = useRef(null);\n  const [selectedImageName, setSelectedImageName] = useState('');\n  const [mostrarBotonBuscar, setMostrarBotonBuscar] = useState(false);\n\n  useEffect(() => {\n    // Tu lógica que usa inputRef.current\n    if (inputRef.current) {\n      inputRef.current.addEventListener('change', handleFileInputChange);\n    }\n\n    // Limpia el event listener al desmontar el componente\n    return () => {\n      if (inputRef.current) {\n        inputRef.current.removeEventListener('change', handleFileInputChange);\n      }\n    };\n  }, []); // Empty dependency array ensures the effect runs once after the component mounts\n\n  const handleFileInputChange = (event) => {\n    const selectedFile = event.target.files[0];\n\n    if (selectedFile) {\n      setSelectedImageName(selectedFile.name);\n      setMostrarBotonBuscar(true);\n    }\n  };\n\n  const handleButtonClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  };\n\n  const handleBuscarClick = () => {\n    alert('Realizando búsqueda...');\n    console.log('Buscar haciendo clic en el botón');\n  };\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        style={{ display: 'none' }}\n        ref={inputRef}\n      />\n      <div className='busqueda-container'>\n        <button onClick={handleButtonClick} className='busqueda'>\n          Seleccionar imagen:\n        </button>\n        {selectedImageName && (\n          <div className='Nombre'>\n            <p>{selectedImageName}</p>\n            {mostrarBotonBuscar && (\n              <button onClick={handleBuscarClick} className='botonbuscar'>\n                Buscar\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Seleccionarimg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}