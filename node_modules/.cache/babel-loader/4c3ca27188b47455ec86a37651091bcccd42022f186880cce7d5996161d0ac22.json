{"ast":null,"code":"var _jsxFileName = \"/home/ivanna/Documents/tt2/inicio/src/capturarimg.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContextCaptura } from './Contextcaptura';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [imagenCapturada, setImagenCapturada] = useContextCaptura;\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [nombreImagen, setNombreImagen] = useState(null);\n  \n\n  const alternarCamara = async () => {\n    try {\n      if (!camaraIniciada) {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n      } else {\n        detenerCamara();\n      }\n      setCamaraIniciada(!camaraIniciada);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n  };\n\n  const capturaImg = () => {\n    const context = canvasRef.current.getContext('2d');\n    const video = videoRef.current;\n\n    canvasRef.current.width = video.videoWidth;\n    canvasRef.current.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/png');\n    setImagenCapturada(urlImagen);\n\n    // Obtener el nombre de la imagen\n    const nombre = `imagen_capturada_${new Date().getTime()}.png`;\n    setNombreImagen(nombre);\n\n    // Detener la cámara después de capturar la imagen\n    detenerCamara();\n    setCamaraIniciada(false);\n  };\n\n  const descargarImagen = () => {\n    const enlaceDescarga = document.createElement('a');\n    enlaceDescarga.href = imagenCapturada;\n    enlaceDescarga.download = nombreImagen || 'imagen_capturada.png';\n    enlaceDescarga.click();\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        <button onClick={alternarCamara} className='botoncam'>\n          <img src=\"busca.png\" alt=\"Botón con imagen\" />\n          {camaraIniciada ? 'Detener cámara' : 'Iniciar cámara'}\n        </button>\n      </div>\n      <div className='botoncam'>\n        {camaraIniciada && (\n          <button onClick={capturaImg} className='botoncam'>Tomar foto</button>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='nombreimagencaptura'>\n          <img src={imagenCapturada} alt=\"Imagen capturada\"  />\n          <p>Imagen: {nombreImagen}</p>\n          <button onClick={descargarImagen}>Descargar Imagen</button>\n          <Link to={{ pathname: \"/resultadocaptura\", state: { imagenCapturada } }} className='botonbuscar'>Buscar</Link>\n\n        </div>\n      )}\n\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n\n}\nexport default CapturaImg;\n*/\nimport React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useImagenContext } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CapturaImg() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [imagenCapturada, setImagenCapturada] = useState(null);\n  const {\n    setImagenCargada\n  } = useImagenContext();\n  const iniciarCamara = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      setCamaraIniciada(true);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n    tracks.forEach(track => track.stop());\n    videoRef.current.srcObject = null;\n    setCamaraIniciada(false);\n  };\n  const tomarFoto = () => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/jpeg'); // Cambia a 'image/jpeg'\n\n    // Almacenar la imagen en el contexto y en el estado local\n    setImagenCargada(urlImagen);\n    setImagenCapturada(urlImagen);\n  };\n  const handleTomarFoto = () => {\n    tomarFoto();\n  };\n  const handleDetenerCamara = () => {\n    detenerCamara();\n  };\n  const handleBuscar = () => {\n    // Lógica para buscar la imagen\n    console.log('Buscar imagen:', imagenCapturada);\n    // Puedes redirigir a la página de resultados o realizar la lógica de búsqueda aquí\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tomarfoto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botoncam\",\n      children: camaraIniciada ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTomarFoto,\n          className: \"botoncam\",\n          children: \"Tomar foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDetenerCamara,\n          className: \"botoncam\",\n          children: \"Detener c\\xE1mara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: iniciarCamara,\n          className: \"botoncam\",\n          children: \"Iniciar c\\xE1mara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), imagenCapturada && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/resultadocaptura\",\n          className: \"botoncam\",\n          onClick: handleBuscar,\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), imagenCapturada && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imagencapturada\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagenCapturada,\n        alt: \"Imagen capturada\",\n        className: \"result\",\n        style: {\n          width: '200px',\n          height: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: 'none'\n      },\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(CapturaImg, \"Gex4ssdwruzORtJEve9XG2QpFfM=\", false, function () {\n  return [useImagenContext];\n});\n_c = CapturaImg;\nexport default CapturaImg;\nvar _c;\n$RefreshReg$(_c, \"CapturaImg\");","map":{"version":3,"names":["React","useRef","useState","Link","useImagenContext","jsxDEV","_jsxDEV","Fragment","_Fragment","CapturaImg","_s","videoRef","canvasRef","camaraIniciada","setCamaraIniciada","imagenCapturada","setImagenCapturada","setImagenCargada","iniciarCamara","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","detenerCamara","tracks","getTracks","forEach","track","stop","tomarFoto","canvas","document","createElement","context","getContext","width","videoWidth","height","videoHeight","drawImage","urlImagen","toDataURL","handleTomarFoto","handleDetenerCamara","handleBuscar","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","style","ref","display","autoPlay","_c","$RefreshReg$"],"sources":["/home/ivanna/Documents/tt2/inicio/src/capturarimg.jsx"],"sourcesContent":["/*import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContextCaptura } from './Contextcaptura';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [imagenCapturada, setImagenCapturada] = useContextCaptura;\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [nombreImagen, setNombreImagen] = useState(null);\n  \n\n  const alternarCamara = async () => {\n    try {\n      if (!camaraIniciada) {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n      } else {\n        detenerCamara();\n      }\n      setCamaraIniciada(!camaraIniciada);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n  };\n\n  const capturaImg = () => {\n    const context = canvasRef.current.getContext('2d');\n    const video = videoRef.current;\n\n    canvasRef.current.width = video.videoWidth;\n    canvasRef.current.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/png');\n    setImagenCapturada(urlImagen);\n\n    // Obtener el nombre de la imagen\n    const nombre = `imagen_capturada_${new Date().getTime()}.png`;\n    setNombreImagen(nombre);\n\n    // Detener la cámara después de capturar la imagen\n    detenerCamara();\n    setCamaraIniciada(false);\n  };\n\n  const descargarImagen = () => {\n    const enlaceDescarga = document.createElement('a');\n    enlaceDescarga.href = imagenCapturada;\n    enlaceDescarga.download = nombreImagen || 'imagen_capturada.png';\n    enlaceDescarga.click();\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        <button onClick={alternarCamara} className='botoncam'>\n          <img src=\"busca.png\" alt=\"Botón con imagen\" />\n          {camaraIniciada ? 'Detener cámara' : 'Iniciar cámara'}\n        </button>\n      </div>\n      <div className='botoncam'>\n        {camaraIniciada && (\n          <button onClick={capturaImg} className='botoncam'>Tomar foto</button>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='nombreimagencaptura'>\n          <img src={imagenCapturada} alt=\"Imagen capturada\"  />\n          <p>Imagen: {nombreImagen}</p>\n          <button onClick={descargarImagen}>Descargar Imagen</button>\n          <Link to={{ pathname: \"/resultadocaptura\", state: { imagenCapturada } }} className='botonbuscar'>Buscar</Link>\n\n        </div>\n      )}\n\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n\n}\nexport default CapturaImg;\n*/\nimport React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useImagenContext } from './context';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [imagenCapturada, setImagenCapturada] = useState(null);\n  const { setImagenCargada } = useImagenContext();\n\n  const iniciarCamara = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = stream;\n      setCamaraIniciada(true);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n    setCamaraIniciada(false);\n  };\n\n  const tomarFoto = () => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/jpeg');  // Cambia a 'image/jpeg'\n\n\n    // Almacenar la imagen en el contexto y en el estado local\n    setImagenCargada(urlImagen);\n    setImagenCapturada(urlImagen);\n  };\n\n  const handleTomarFoto = () => {\n    tomarFoto();\n  };\n\n  const handleDetenerCamara = () => {\n    detenerCamara();\n  };\n\n  const handleBuscar = () => {\n    // Lógica para buscar la imagen\n    console.log('Buscar imagen:', imagenCapturada);\n    // Puedes redirigir a la página de resultados o realizar la lógica de búsqueda aquí\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        {camaraIniciada ? (\n          <>\n            <button onClick={handleTomarFoto} className='botoncam'>\n              Tomar foto\n            </button>\n            <button onClick={handleDetenerCamara} className='botoncam'>\n              Detener cámara\n            </button>\n          </>\n        ) : (\n          <>\n            <button onClick={iniciarCamara} className='botoncam'>\n              Iniciar cámara\n            </button>\n            {imagenCapturada && (\n              <Link to=\"/resultadocaptura\" className='botoncam' onClick={handleBuscar}>\n                Buscar\n              </Link>\n            )}\n          </>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='imagencapturada'>\n          <img\n            src={imagenCapturada}\n            alt='Imagen capturada'\n            className='result'\n            style={{ width: '200px', height: '300px' }}\n          />\n        </div>\n      )}\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n    </div>\n  );\n}\n\nexport default CapturaImg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}