{"ast":null,"code":"var _jsxFileName = \"/home/ivanna/Documents/tt2/inicio/src/capturarimg.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContextCaptura } from './Contextcaptura';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [imagenCapturada, setImagenCapturada] = useContextCaptura;\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [nombreImagen, setNombreImagen] = useState(null);\n  \n\n  const alternarCamara = async () => {\n    try {\n      if (!camaraIniciada) {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n      } else {\n        detenerCamara();\n      }\n      setCamaraIniciada(!camaraIniciada);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n  };\n\n  const capturaImg = () => {\n    const context = canvasRef.current.getContext('2d');\n    const video = videoRef.current;\n\n    canvasRef.current.width = video.videoWidth;\n    canvasRef.current.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/png');\n    setImagenCapturada(urlImagen);\n\n    // Obtener el nombre de la imagen\n    const nombre = `imagen_capturada_${new Date().getTime()}.png`;\n    setNombreImagen(nombre);\n\n    // Detener la cámara después de capturar la imagen\n    detenerCamara();\n    setCamaraIniciada(false);\n  };\n\n  const descargarImagen = () => {\n    const enlaceDescarga = document.createElement('a');\n    enlaceDescarga.href = imagenCapturada;\n    enlaceDescarga.download = nombreImagen || 'imagen_capturada.png';\n    enlaceDescarga.click();\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        <button onClick={alternarCamara} className='botoncam'>\n          <img src=\"busca.png\" alt=\"Botón con imagen\" />\n          {camaraIniciada ? 'Detener cámara' : 'Iniciar cámara'}\n        </button>\n      </div>\n      <div className='botoncam'>\n        {camaraIniciada && (\n          <button onClick={capturaImg} className='botoncam'>Tomar foto</button>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='nombreimagencaptura'>\n          <img src={imagenCapturada} alt=\"Imagen capturada\"  />\n          <p>Imagen: {nombreImagen}</p>\n          <button onClick={descargarImagen}>Descargar Imagen</button>\n          <Link to={{ pathname: \"/resultadocaptura\", state: { imagenCapturada } }} className='botonbuscar'>Buscar</Link>\n\n        </div>\n      )}\n\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n\n}\nexport default CapturaImg;\n*/\nimport React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useImagenContext } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CapturaImg() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [mostrarBotonBuscar, setMostrarBotonBuscar] = useState(false);\n  const {\n    setImagenCargada\n  } = useImagenContext();\n  const iniciarCamara = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n    tracks.forEach(track => track.stop());\n    videoRef.current.srcObject = null;\n  };\n  const tomarFoto = () => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvas.toDataURL('image/png');\n\n    // Almacenar la imagen en el contexto\n    setImagenCargada(urlImagen);\n\n    // Detener la cámara después de tomar la foto\n    detenerCamara();\n    setMostrarBotonBuscar(true); // Puedes activar el botón de búsqueda después de tomar la foto\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tomarfoto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botoncam\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: iniciarCamara,\n        className: \"botoncam\",\n        children: \"Iniciar c\\xE1mara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botoncam\",\n      children: mostrarBotonBuscar && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: tomarFoto,\n        className: \"botoncam\",\n        children: \"Tomar foto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: 'none'\n      },\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(CapturaImg, \"qxBMKB7iwQV194rvlpRbaOeB6+I=\", false, function () {\n  return [useImagenContext];\n});\n_c = CapturaImg;\nexport default CapturaImg;\nvar _c;\n$RefreshReg$(_c, \"CapturaImg\");","map":{"version":3,"names":["React","useRef","useState","Link","useImagenContext","jsxDEV","_jsxDEV","CapturaImg","_s","videoRef","canvasRef","mostrarBotonBuscar","setMostrarBotonBuscar","setImagenCargada","iniciarCamara","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","detenerCamara","tracks","getTracks","forEach","track","stop","tomarFoto","canvas","document","createElement","context","getContext","width","videoWidth","height","videoHeight","drawImage","urlImagen","toDataURL","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","autoPlay","_c","$RefreshReg$"],"sources":["/home/ivanna/Documents/tt2/inicio/src/capturarimg.jsx"],"sourcesContent":["/*import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContextCaptura } from './Contextcaptura';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [imagenCapturada, setImagenCapturada] = useContextCaptura;\n  const [camaraIniciada, setCamaraIniciada] = useState(false);\n  const [nombreImagen, setNombreImagen] = useState(null);\n  \n\n  const alternarCamara = async () => {\n    try {\n      if (!camaraIniciada) {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n      } else {\n        detenerCamara();\n      }\n      setCamaraIniciada(!camaraIniciada);\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n  };\n\n  const capturaImg = () => {\n    const context = canvasRef.current.getContext('2d');\n    const video = videoRef.current;\n\n    canvasRef.current.width = video.videoWidth;\n    canvasRef.current.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvasRef.current.toDataURL('image/png');\n    setImagenCapturada(urlImagen);\n\n    // Obtener el nombre de la imagen\n    const nombre = `imagen_capturada_${new Date().getTime()}.png`;\n    setNombreImagen(nombre);\n\n    // Detener la cámara después de capturar la imagen\n    detenerCamara();\n    setCamaraIniciada(false);\n  };\n\n  const descargarImagen = () => {\n    const enlaceDescarga = document.createElement('a');\n    enlaceDescarga.href = imagenCapturada;\n    enlaceDescarga.download = nombreImagen || 'imagen_capturada.png';\n    enlaceDescarga.click();\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        <button onClick={alternarCamara} className='botoncam'>\n          <img src=\"busca.png\" alt=\"Botón con imagen\" />\n          {camaraIniciada ? 'Detener cámara' : 'Iniciar cámara'}\n        </button>\n      </div>\n      <div className='botoncam'>\n        {camaraIniciada && (\n          <button onClick={capturaImg} className='botoncam'>Tomar foto</button>\n        )}\n      </div>\n      {imagenCapturada && (\n        <div className='nombreimagencaptura'>\n          <img src={imagenCapturada} alt=\"Imagen capturada\"  />\n          <p>Imagen: {nombreImagen}</p>\n          <button onClick={descargarImagen}>Descargar Imagen</button>\n          <Link to={{ pathname: \"/resultadocaptura\", state: { imagenCapturada } }} className='botonbuscar'>Buscar</Link>\n\n        </div>\n      )}\n\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n    </div>\n  );\n\n}\nexport default CapturaImg;\n*/import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useImagenContext } from './context';\n\nfunction CapturaImg() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [mostrarBotonBuscar, setMostrarBotonBuscar] = useState(false);\n  const { setImagenCargada } = useImagenContext();\n\n  const iniciarCamara = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error('Error al acceder a la cámara:', error);\n    }\n  };\n\n  const detenerCamara = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n\n    tracks.forEach((track) => track.stop());\n    videoRef.current.srcObject = null;\n  };\n\n  const tomarFoto = () => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n    // Obtener la URL de datos de la imagen capturada\n    const urlImagen = canvas.toDataURL('image/png');\n\n    // Almacenar la imagen en el contexto\n    setImagenCargada(urlImagen);\n\n    // Detener la cámara después de tomar la foto\n    detenerCamara();\n    setMostrarBotonBuscar(true);  // Puedes activar el botón de búsqueda después de tomar la foto\n  };\n\n  return (\n    <div className='tomarfoto'>\n      <div className='botoncam'>\n        <button onClick={iniciarCamara} className='botoncam'>\n          Iniciar cámara\n        </button>\n      </div>\n      <div className='botoncam'>\n        {mostrarBotonBuscar && (\n          <button onClick={tomarFoto} className='botoncam'>Tomar foto</button>\n        )}\n      </div>\n      <video ref={videoRef} style={{ display: 'none' }} autoPlay />\n    </div>\n  );\n}\n\nexport default CapturaImg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}